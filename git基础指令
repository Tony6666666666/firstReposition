1.查看远程关联
$git remote -v
2.跟新本地库
$git pull --rebase origin master
$git status
$git add hello.py
$git commit -m '描述信息'

Git常用命令
一、文件修改
1.git status    查看文件状态

2.vi hello.py  修改hello.py文件(修改之后的文件在工作区)

3.git add hello.py   把hello.py文件从工作区加载到stage区（也就是复制一份过来到暂存区）

4.git status  hello.py 再次查看hello.py

5.git commit –m ‘第一次提交代码’ 移动到相应的分支(工作区的版本和分支的版本为同一个版本，一致了)

2.在git里面输入  ssh-keygen -t rsa -C "5163@163.com"，生成私钥和公钥
3.在用户主目录里面找到.ssh目录，里面有is_rsa和id_rsa.pub两个文件（密钥对）
  用户主目录:c：\user\administrator
4.登录GitHub，打开Account settings,"SSH keys"页面
5.点"Add SSH Key"，填上任意title，在key文本里面粘贴is_rsa.pub文件的内容

本地库  关联  远程库

orginal:默认远程库名称

6本地库关联远程库
$ git remote add origin  git@github.com:Tony6666666666/firstReposition.git(code里面的ssh)

（删除关联）
git remote rm origin

7.更新本地库
git pull --rebase origin master

8.将本地库内容上传至远程库
git push -u origin master

二、文件撤销操作
1.查看工作区和版本库里面最新版本的区别
git diff HEAD hello.py

方式一：可以撤销未被追踪的文件
2.丢弃工作区的修改
git checkout  hello.py

方式二：可以撤销到任意版本
#查看操作日志
git reset + 日志id   （此时的文件未被追踪，也就是未提交）
git add hello.py
git commit –m ‘撤销操作’(此时文件可被追踪)

git reset --hard  日志id

三、文件删除操作
1.删除工作区的文件
rm hello.py

2.删除暂存区中的文件
git rm hello.py

3.删除当前分支中的文件
git commit –m ‘描述信息’

#4.添加并提交到分支中
git commit -am '修改操作已完成'

四、可以理解为独立开发功能的小房间
1.建立新的分支(系统会自动把原有分支的文件拷贝一份到新建立的分支)
git branch dev
2.查看所有分支（前面带*的为当前的分支）
git branch
3.切换分支
git checkout dev

